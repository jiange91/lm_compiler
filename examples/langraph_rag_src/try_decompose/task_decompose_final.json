{
    "direct_hyde": {
        "agents": {
            "Query Decomposer": {
                "agent_prompt": "You are responsible for breaking down the original user query into a set of sub-queries. Your goal is to ensure that these sub-queries cover comprehensive aspects of the original query without overlapping. Please provide a list of sub-queries that are distinct and relevant to the original query.",
                "inputs_varaibles": [
                    "question"
                ],
                "output_json_schema": {
                    "title": "SubQuestionsSchema",
                    "description": "A list of sub-queries generated from the original question.",
                    "type": "object",
                    "properties": {
                        "sub_questions": {
                            "title": "Sub Questions",
                            "description": "A list of sub-topics",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "required": [
                        "sub_questions"
                    ]
                },
                "next_action": [
                    "Passage Generator"
                ],
                "dynamic_action_decision": "None"
            },
            "Passage Generator": {
                "agent_prompt": "You will receive a list of sub-queries from the Query Decomposer. For each sub-query, your task is to generate a short passage that answers the topic of that sub-query. Ensure that each passage is concise and directly addresses the sub-query.",
                "inputs_varaibles": [
                    "sub_questions"
                ],
                "output_json_schema": {
                    "title": "PassagesSchema",
                    "description": "A list of passages generated for the sub-queries.",
                    "type": "object",
                    "properties": {
                        "passages": {
                            "title": "Passages",
                            "description": "Passages generated for the sub-topics",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "required": [
                        "passages"
                    ]
                },
                "next_action": [
                    "END"
                ],
                "dynamic_action_decision": "None"
            }
        },
        "final_output_aggregator_code": "def combine_outputs(output_schema, sub_questions, passages):\n    return output_schema(sub_questions=sub_questions, passages=passages)"
    },
    "kalmv": {
        "agents": {
            "Question Evaluation Agent": {
                "agent_prompt": "You are responsible for evaluating whether the provided answer addresses the user question. If the answer does not address the question, grade it as 'ae'. If it does address the question, pass the evaluation to the next agent.",
                "inputs_varaibles": [
                    "question",
                    "answer"
                ],
                "output_json_schema": {
                    "title": "QuestionEvaluationSchema",
                    "description": "Decision on whether the answer addresses the question.",
                    "type": "object",
                    "properties": {
                        "decision": {
                            "title": "Decision",
                            "description": "Decision on whether the answer addresses the question.",
                            "enum": [
                                "ae",
                                "re",
                                "ge",
                                "accept"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "decision"
                    ]
                },
                "next_action": [
                    "Knowledge Relevance Agent",
                    "END"
                ],
                "dynamic_action_decision": "def next_agent(decision): return ['END'] if decision == 'ae' else ['Knowledge Relevance Agent']"
            },
            "Knowledge Relevance Agent": {
                "agent_prompt": "You are responsible for assessing the relevance of the provided knowledge to the user question. If the knowledge is irrelevant to the question, grade it as 're'. If the knowledge is relevant, pass the evaluation to the next agent.",
                "inputs_varaibles": [
                    "question",
                    "knowledge"
                ],
                "output_json_schema": {
                    "title": "KnowledgeRelevanceSchema",
                    "description": "Decision on the relevance of the knowledge to the question.",
                    "type": "object",
                    "properties": {
                        "decision": {
                            "title": "Decision",
                            "description": "Decision on the relevance of the knowledge to the question.",
                            "enum": [
                                "ae",
                                "re",
                                "ge",
                                "accept"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "decision"
                    ]
                },
                "next_action": [
                    "Grounding Evaluation Agent",
                    "END"
                ],
                "dynamic_action_decision": "def next_agent(decision): return ['END'] if decision == 're' else ['Grounding Evaluation Agent']"
            },
            "Grounding Evaluation Agent": {
                "agent_prompt": "You are responsible for determining if the provided answer is grounded by the relevant knowledge. If the answer is not grounded by the knowledge, grade it as 'ge'. If the answer is grounded, grade it as 'accept'.",
                "inputs_varaibles": [
                    "answer",
                    "knowledge"
                ],
                "output_json_schema": {
                    "title": "GroundingEvaluationSchema",
                    "description": "Decision on whether the answer is grounded by the knowledge.",
                    "type": "object",
                    "properties": {
                        "decision": {
                            "title": "Decision",
                            "description": "Decision on whether the answer is grounded by the knowledge.",
                            "enum": [
                                "ae",
                                "re",
                                "ge",
                                "accept"
                            ],
                            "type": "string"
                        }
                    },
                    "required": [
                        "decision"
                    ]
                },
                "next_action": [
                    "END"
                ],
                "dynamic_action_decision": "None"
            }
        },
        "final_output_aggregator_code": "None"
    }
}