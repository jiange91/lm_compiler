# generated by datamodel-codegen:
#   filename:  test_write.json
#   timestamp: 2024-08-29T08:43:32+00:00

from __future__ import annotations

from typing import Dict, List, Union

from pydantic import BaseModel, Field


class Anything(BaseModel):
    imhere: str = Field(..., description='I am here', title='Imhere')


class AgentSemantic(BaseModel):
    agent_prompt: str = Field(
        ..., description='prompt for the agent', title='Agent Prompt'
    )
    inputs_varaibles: List[str] = Field(
        ...,
        description='list of input variables for the agent',
        title='Inputs Varaibles',
    )
    output_json_schema: str = Field(
        ..., description='json output schema for the agent', title='Output Json Schema'
    )
    next_action: Union[str, List[str]] = Field(
        ...,
        description='next agents to invoke or python code for dynamic decision',
        title='Next Action',
    )
    anything: Anything = Field(..., description='test anything', title='Anything')


class StructuredAgentSystem(BaseModel):
    agents: Dict[str, AgentSemantic] = Field(
        ...,
        description='dictionary of agent name to information about that agent',
        title='Agents',
    )
    final_output_aggregator_code: str = Field(
        ...,
        description="python code to combine the outputs of the new agents to generate the final output, put 'None' if not needed",
        title='Final Output Aggregator Code',
    )
